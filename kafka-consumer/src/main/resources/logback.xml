<?xml version="1.0" encoding="UTF-8"?>
<!--
  logback.xml
  insights-event-logger
  Created by Gooru on 2014
  Copyright (c) 2014 Gooru. All rights reserved.
  http://www.goorulearning.org/
  Permission is hereby granted, free of charge, to any person obtaining
  a copy of this software and associated documentation files (the
  "Software"), to deal in the Software without restriction, including
  without limitation the rights to use, copy, modify, merge, publish,
  distribute, sublicense, and/or sell copies of the Software, and to
  permit persons to whom the Software is furnished to do so, subject to
  the following conditions:
  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Software.
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-->
<configuration>

	<!-- console appender -->
	<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%5p [%t] %m%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
	</appender>

	<!-- activity appender will append the consumer module related INFO log -->
	<appender name="activity-out" class="ch.qos.logback.core.rolling.RollingFileAppender"> <!-- Rolling file appender for rolling files -->
		<param name="File" value="${CONSUMER_LOG_STORAGE}/logs/consumer_logs/activity.log" />
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover -->
			<fileNamePattern>${CONSUMER_LOG_STORAGE}/logs/consumer_logs/activity.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<param name="encoding" value="UTF-8" />
		<encoder>
			<pattern>%-30([web] %d{HH:mm:ss.SSS} [%thread]) %-5level %logger{32} - %msg%n</pattern>
		</encoder>
	</appender>

	
	<!-- error appender will append the consumer module related ERROR log -->
		<appender name="activity-error-out" class="ch.qos.logback.core.rolling.RollingFileAppender"> <!-- Rolling file appender for rolling files -->
		<param name="File" value="${CONSUMER_LOG_STORAGE}/logs/consumer_logs/activity-error.log" />
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover -->
			<fileNamePattern>${CONSUMER_LOG_STORAGE}/logs/consumer_logs/activity-error.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<param name="encoding" value="UTF-8" />
		<encoder>
			<pattern>%-30([web] %d{HH:mm:ss.SSS} [%thread]) %-5level %logger{32} - %msg%n</pattern>
		</encoder>
	</appender>

	<!-- activity logger to log consumer module related INFO log -->
	<logger name="consumerActivity" level="INFO" additivity="false">
        <appender-ref ref="activity-out"/>
    </logger>
	
	<!-- activity logger to log consumer module related ERROR log -->
	<logger name="consumerActivityError" level="ERROR" additivity="false">
        <appender-ref ref="activity-error-out"/>
    </logger>
    
    <!-- logger configuration for dependency -->
	<logger name="org.springframework" level="WARN"></logger>
	<logger name="org.hibernate.cfg.HbmBinder" level="WARN"></logger>
	
	<!-- Root level logger -->
	<root level="INFO">
	<appender-ref ref="stdout" /> 
	</root>
</configuration>

